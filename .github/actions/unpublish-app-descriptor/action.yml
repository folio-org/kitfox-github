name: 'Unpublish Application Descriptor'
description: 'Remove application descriptor from FOLIO Artifact Registry (FAR)'
inputs:
  descriptor-id:
    description: 'Descriptor ID (name-version format) to unpublish from FAR'
    required: true
  far-url:
    description: 'FAR registry URL'
    required: true
outputs:
  unpublish-status:
    description: 'Success/failure status (success | failure)'
    value: ${{ steps.unpublish.outputs.status }}
  http-code:
    description: 'HTTP response code from unpublish request'
    value: ${{ steps.unpublish.outputs.http_code }}

runs:
  using: 'composite'
  steps:
    - name: Unpublish Application Descriptor from FAR
      id: unpublish
      shell: bash
      env:
        DESCRIPTOR_ID: ${{ inputs.descriptor-id }}
        FAR_API_URL: "${{ inputs.far-url }}/applications"
      run: |
        set -eo pipefail
        echo "::notice::Unpublishing application descriptor $DESCRIPTOR_ID from FAR"

        resp_file="$(mktemp)"

        http_code="$(curl -sS -o "$resp_file" -w "%{http_code}" -X DELETE \
          -H "Content-Type: application/json" \
          "$FAR_API_URL/$DESCRIPTOR_ID")"

        echo "http_code=$http_code" >> "$GITHUB_OUTPUT"

        if ! [[ "$http_code" =~ ^2[0-9]{2}$ ]]; then
          echo "::error::Failed to unpublish application descriptor from FAR (HTTP $http_code)"

          [[ -s "$resp_file" ]] && cat "$resp_file" >&2 || echo "(empty response body)" >&2

          echo "status=failure" >> "$GITHUB_OUTPUT"
          rm -f "$resp_file"
          exit 1
        fi

        echo "::notice::Application descriptor unpublished successfully from FAR"
        echo "status=success" >> "$GITHUB_OUTPUT"

        rm -f "$resp_file"
